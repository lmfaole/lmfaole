label:has(input[data-switch="true"]) {
	display: grid;
	grid-template-columns: 2.8em 1fr;
	gap: 1ch;
	align-items: center;

	/* Gjem selve input elementet */
	input {
		border: 0;
		clip: rect(0 0 0 0);
		height: auto;
		margin: 0;
		overflow: hidden;
		padding: 0;
		position: absolute;
		width: 1px;
		white-space: nowrap;
		grid-column: 3;
	}

	&:has(input[data-reverse="true"]) {
		grid-template-columns: 1fr 2.8em;

		.switch {
			grid-row: 1;
			grid-column: 2;
		}
	}

	&:has(input[data-full-width="true"]) {
		width: 100%;
		padding-block: 0.25lh;
	}

	.switch {
		display: flex;
		align-items: center;
		justify-content: start;
		background-color: var(--interactive-bg-color);
		border: 1px solid var(--border-color);
		padding: 4px;
		transition: var(--animation-ease-out) all;

		&,
		svg {
			border-radius: 1lh;
			box-sizing: border-box;
		}

		svg {
			border: 1px solid var(--border-color-subtle);
			font-size: large;
		}
	}

	.check {
		display: none;
	}

	&:has(input:checked) {
		--bg-color: Highlight;
		--text-color: HighlightText;
		--border-color: Highlight;

		.cross {
			display: none;
		}

		.check {
			display: inline-block;
		}

		.switch {
			justify-content: end;
			background-color: hsl(from var(--bg-color) h s l / 0.2);
			border-color: var(--border-color);

			svg {
				background-color: var(--bg-color);
				border-color: var(--border-color);
				color: var(--text-color);
			}
		}
	}

	&:has(input[disabled]) {
		.switch {
			border-style: dashed;
		}
	}

	&:not(:has(input[disabled])) {
		cursor: pointer;
	}

	@media (prefers-contrast: more) {
		--bg-color: light-dark(white, black);
		--border-color: light-dark(black, white);
		--text-color: light-dark(black, white);
	}
}

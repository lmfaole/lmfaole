/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MChar248nsterIndexRouteImport } from './routes/mønster/index'
import { Route as KomponenterIndexRouteImport } from './routes/komponenter/index'
import { Route as MChar248nsterPatternNameRouteImport } from './routes/mønster/$patternName'
import { Route as KomponenterComponentNameRouteImport } from './routes/komponenter/$componentName'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MChar248nsterIndexRoute = MChar248nsterIndexRouteImport.update({
  id: '/mønster/',
  path: '/mønster/',
  getParentRoute: () => rootRouteImport,
} as any)
const KomponenterIndexRoute = KomponenterIndexRouteImport.update({
  id: '/komponenter/',
  path: '/komponenter/',
  getParentRoute: () => rootRouteImport,
} as any)
const MChar248nsterPatternNameRoute =
  MChar248nsterPatternNameRouteImport.update({
    id: '/mønster/$patternName',
    path: '/mønster/$patternName',
    getParentRoute: () => rootRouteImport,
  } as any)
const KomponenterComponentNameRoute =
  KomponenterComponentNameRouteImport.update({
    id: '/komponenter/$componentName',
    path: '/komponenter/$componentName',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/komponenter/$componentName': typeof KomponenterComponentNameRoute
  '/mønster/$patternName': typeof MChar248nsterPatternNameRoute
  '/komponenter': typeof KomponenterIndexRoute
  '/mønster': typeof MChar248nsterIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/komponenter/$componentName': typeof KomponenterComponentNameRoute
  '/mønster/$patternName': typeof MChar248nsterPatternNameRoute
  '/komponenter': typeof KomponenterIndexRoute
  '/mønster': typeof MChar248nsterIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/komponenter/$componentName': typeof KomponenterComponentNameRoute
  '/mønster/$patternName': typeof MChar248nsterPatternNameRoute
  '/komponenter/': typeof KomponenterIndexRoute
  '/mønster/': typeof MChar248nsterIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/komponenter/$componentName'
    | '/mønster/$patternName'
    | '/komponenter'
    | '/mønster'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/komponenter/$componentName'
    | '/mønster/$patternName'
    | '/komponenter'
    | '/mønster'
  id:
    | '__root__'
    | '/'
    | '/komponenter/$componentName'
    | '/mønster/$patternName'
    | '/komponenter/'
    | '/mønster/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  KomponenterComponentNameRoute: typeof KomponenterComponentNameRoute
  MChar248nsterPatternNameRoute: typeof MChar248nsterPatternNameRoute
  KomponenterIndexRoute: typeof KomponenterIndexRoute
  MChar248nsterIndexRoute: typeof MChar248nsterIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mønster/': {
      id: '/mønster/'
      path: '/mønster'
      fullPath: '/mønster'
      preLoaderRoute: typeof MChar248nsterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/komponenter/': {
      id: '/komponenter/'
      path: '/komponenter'
      fullPath: '/komponenter'
      preLoaderRoute: typeof KomponenterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mønster/$patternName': {
      id: '/mønster/$patternName'
      path: '/mønster/$patternName'
      fullPath: '/mønster/$patternName'
      preLoaderRoute: typeof MChar248nsterPatternNameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/komponenter/$componentName': {
      id: '/komponenter/$componentName'
      path: '/komponenter/$componentName'
      fullPath: '/komponenter/$componentName'
      preLoaderRoute: typeof KomponenterComponentNameRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  KomponenterComponentNameRoute: KomponenterComponentNameRoute,
  MChar248nsterPatternNameRoute: MChar248nsterPatternNameRoute,
  KomponenterIndexRoute: KomponenterIndexRoute,
  MChar248nsterIndexRoute: MChar248nsterIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
